name: Build Beta

on:
  push:
    tags:
      - "v[0-100]+.[0-9]+.[0-1000]-beta"
  workflow_dispatch:
  
jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.7",  "3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: pyinstaller -F src/main.py -n idv-login-${{github.ref_name}}-Py${{ matrix.python-version }}.exe -i assets/icon.ico --version-file assets/version.txt

      - name: Calcaulate Client checksum
        run: Get-FileHash "upload/idv-login-${{github.ref_name}}-Py${{ matrix.python-version }}.exe" | select-object -ExpandProperty Hash > upload/idv-login-${{github.ref_name}}-Py${{ matrix.python-version }}.exe.sha256

      - name: Make dir
        run: New-Item -Force -Path upload -ItemType Directory
          
      - name: Copy LICENSES
        run: Copy-Item -Path "LICENSES/*" -Destination "dist" -Recurse

      - name: Compress Archieve
        run: Compress-Archive -Path dist/* -DestinationPath upload/idv-login-${{github.ref_name}}-Py${{ matrix.python-version }}.zip

      - name: Calcaulate checksum
        run: Get-FileHash "upload/idv-login-${{github.ref_name}}-Py${{ matrix.python-version }}.zip" | select-object -ExpandProperty Hash > upload/idv-login-${{github.ref_name}}-Py${{ matrix.python-version }}.zip.sha256

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-x86_64-${{ matrix.python-version }}
          path: upload/
      - name: Release body
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body_path: ext/${{github.ref_name}}-CHANGELOG
  release:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            **/*.zip
            **/*.sha256