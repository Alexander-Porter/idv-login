name: Build and Package

on:
    workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        python-version: [3.8.4]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Python Embedded
        run: |
          Invoke-WebRequest -Uri https://www.python.org/ftp/python/${{ matrix.python-version }}/python-${{ matrix.python-version }}-embed-amd64.zip -OutFile python-embed.zip
          Expand-Archive python-embed.zip -DestinationPath python-embed

      - name: Set up Python Embedded
        run: |
          Invoke-WebRequest -Uri https://bootstrap.pypa.io/pip/3.8/get-pip.py -OutFile get-pip.py
          .\python-embed\python.exe get-pip.py
          .\python-embed\python.exe -m pip install --upgrade pip
        shell: pwsh

      - name: Install dependencies
        run: |
          .\python-embed\python.exe -m pip install -r requirements.txt
      
      - name: Install pywin32 (Windows)
        if: runner.os == 'Windows'
        run: pip install pywin32

      - name: Insert build info
        run: |
          $buildInfo = 'BUILD_INFO="Build in ${{github.run_id}}(${{github.sha}})"'
          $versionInfo = 'VERSION="${{github.ref_name}}"'
          $buildInfo | Out-File -FilePath src/buildinfo.py -Encoding utf8
          $versionInfo | Out-File -FilePath src/buildinfo.py -Encoding utf8 -Append
        shell: pwsh

      - name: Compile Python files to .pyc
        run: |
            .\python-embed\python.exe  -m compileall src
            Get-ChildItem -Recurse -Filter '*.pyc' | ForEach-Object {
                $newName = $_.Name -replace '\.cpython-3\d+', ''
                if (Test-Path -Path (Join-Path -Path $_.DirectoryName -ChildPath $newName)) {
                    Remove-Item -Path (Join-Path -Path $_.DirectoryName -ChildPath $newName) -Force
                }
                Rename-Item -Path $_.FullName -NewName $newName
            }
            Get-ChildItem -Recurse -Filter '*.pyc' | ForEach-Object { Move-Item $_.FullName -Destination $_.Directory.Parent.FullName }
            Get-ChildItem -Recurse -Filter '*.py' | Remove-Item -Force
            Get-ChildItem -Recurse -Directory -Filter '__pycache__' | Remove-Item -Recurse -Force
        shell: pwsh
      
      - name: Package application
        run: |
          mkdir dist
          Copy-Item -Recurse -Force python-embed dist/python-embed
          Copy-Item -Recurse -Force src dist/src
          Copy-Item -Force tools/点我启动工具.bat dist/点我启动工具.bat
        shell: pwsh

      - name: Compress package
        run: Compress-Archive -Path dist/* -DestinationPath idv-login-${{github.ref_name}}-Py${{ matrix.python-version }}.zip
        shell: pwsh

      - name: Calculate Client checksum
        run: Get-FileHash "idv-login-${{github.ref_name}}-Py${{ matrix.python-version }}.zip" | select-object -ExpandProperty Hash > idv-login-${{github.ref_name}}-Py${{ matrix.python-version }}.zip.sha256

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production-artifacts
          path: |
            idv-login-${{github.ref_name}}-Py${{ matrix.python-version }}.zip
            idv-login-${{github.ref_name}}-Py${{ matrix.python-version }}.zip.sha256