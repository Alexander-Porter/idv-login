name: Sync Release

on:
  release:
    types:
      - published
  workflow_dispatch:
  push:
    paths:
      - 'assets/anno'
      - 'assets/index.html'

jobs:
  sync_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Get latest release
        id: latest_release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const release = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            console.log(release.data);
            return release.data;



      - name: Download release assets to a local Dir
        id: download_assets
        env:
          release_data: ${{(steps.latest_release.outputs.result)}}
        run: |
          mkdir -p tmps
          echo '${{ steps.latest_release.outputs.result }}' | jq -r '.assets[] | select(.name | test("\.exe$|mac$|\.zip$")) | .browser_download_url' | while read url; do
            echo "Downloading: $url"
            wget -P tmps "$url"
          done
          ls -la tmps/

      - name: Create compressed archives
        run: |
          cd tmps
          
          # 获取当前日期
          current_date=$(date +"%Y-%m-%d")
          
          # 重命名pack版本的zip文件
          for zip_file in idv-login-*-Py*.zip; do
            if [ -f "$zip_file" ]; then
              cp "$zip_file" "问题十八专用！-${current_date}.zip"
              echo "Renamed $zip_file to 问题十八专用！-${current_date}.zip"
              break
            fi
          done
          
          # 压缩所有.exe文件
          if ls *.exe 1> /dev/null 2>&1; then
            zip -r "最新版-${current_date}.zip" *.exe
            echo "Created 最新版-${current_date}.zip"
          fi
          
          # 压缩所有mac文件
          if ls *mac 1> /dev/null 2>&1; then
            zip -r "MacOSVer（只在苹果电脑上使用，一般人不要下！）.zip" *mac
            echo "Created MacOSVer（只在苹果电脑上使用，一般人不要下！）.zip"
          fi
          
          ls -la *.zip

      - name: Upload to Quark Drive
        env:
          QUARK_COOKIES_B64: ${{ secrets.QUARK_COOKIES_B64 }}
          QUARK_PDIR_FID: ${{ secrets.QUARK_PDIR_FID }}
        run: |
          pip install requests
          
          cd tmps
          
          # 上传所有zip文件到夸克网盘
          for zip_file in *.zip; do
            if [ -f "$zip_file" ]; then
              echo "Uploading $zip_file to Quark Drive..."
              python ../tools/quark_upload.py "$zip_file"
            fi
          done
      
      - name: Release to Gitee and update cloudRes
        id: release
        env:
          UPLOAD_PRE_URL: ${{ secrets.SECRET_UPLOAD_PRE_URL }}
          UPLOAD_URL: ${{ secrets.SECRET_UPLOAD_URL}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITEE_TOKEN: ${{secrets.GITEE_TOKEN }}
          GITEE_ROPE: ${{ secrets.GITEE_ROPE }}
        run: |
          pip install requests_toolbelt
          pip install requests
          python tools/release_upload.py tmp
